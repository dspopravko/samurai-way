{"version":3,"file":"static/js/979.c083d04e.chunk.js","mappings":"uKACA,G,QAAsB,qBAAtB,EAAoD,wB,8BCSvCA,EAAS,SAAC,GAIwB,IAHpBC,EAGmB,EAHnBA,KAGmB,IAFnBC,QAAAA,OAEmB,SADhBC,GACgB,YAEpCC,EAAc,UAAMC,EAAN,iBAClBH,EAASG,EAAY,IACvB,OAAO,mCAAQC,UAAWF,EACXG,KAAK,UACDJ,GAFZ,aAEoBF,O,mECnB/B,G,QAAuB,2B,SCaVO,EAAkB,SAACL,GAC5B,OACI,SAAC,KAAD,CACIM,cAAe,CACXC,YAAaP,EAAMQ,cAAgB,IAEvCC,SAAU,SAAEC,EAAF,GAA0C,IAAjBC,EAAgB,EAAhBA,UAC/BX,EAAMS,SAASC,GACfC,KANR,UASI,UAAC,KAAD,CAAMR,UAAWD,EAAjB,WACI,qBAAUU,GAAG,cAAcd,KAAK,cAAce,YAAab,EAAMa,eACjE,mBAAQT,KAAK,SAAb,yB,gICpBVU,EAAsB,SAAC,GACzB,MAAO,CAAEC,OADiE,EAAhDC,YACGD,SAG1B,SAASE,EAAoBC,GAOhC,OAAOC,EAAAA,EAAAA,IAAQL,EAARK,EANP,SAA2BnB,GACvB,IAAKe,EAAwBf,EAAxBe,OAAWK,GAAhB,OAA6BpB,EAA7B,GACA,OAAKe,GACE,SAACG,GAAD,UAAeE,KADF,SAAC,KAAD,CAAUC,GAAG,gB,8ICV1B,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,IAAIG,EAAY,MAAPJ,EAAc,KAAyB,qBAAXK,QAA0BL,EAAIK,OAAOC,WAAaN,EAAI,cAE3F,GAAU,MAANI,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAKZ,KAAQU,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAGS,QAETf,GAAKQ,EAAKQ,SAAWhB,GAH4BS,GAAK,IAK5D,MAAOQ,GACPP,GAAK,EACLH,EAAKU,EACL,QACA,IACOR,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,GFtBuB,CAAqBT,EAAKC,KAAM,EAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF,GIJtG,OAAgB,kBAAoB,uCAAuC,mBAAqB,wCAAwC,YAAc,iCAAiC,YAAc,iCAAiC,cAAgB,mCAAmC,YAAc,iCAAiC,QAAU,6BAA6B,cAAgB,mCAAmC,kBAAoB,uCAAuC,iBAAmB,sCAAsC,UAAY,gC,oBCAliB,EAA4B,0B,SCOfC,EAAS,SAAC5C,GAEnB,SAAgC6C,EAAAA,EAAAA,WAAS,GAAzC,GAAOC,EAAP,KAAiBC,EAAjB,KACA,KAA6BF,EAAAA,EAAAA,UAAS7C,EAAMgD,QAA5C,GAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACND,EAAYlD,EAAMgD,UACnB,CAAChD,EAAMgD,SAOV,OACI,iBAAK7C,UAAWD,EAAhB,WACM4C,IACE,gBAAKM,cAAe,kBAAIL,GAAY,IAApC,UACI,0BAAO/C,EAAMgD,QAAU,oCAG9BF,IACG,4BACI,kBAAOO,WAAS,EAACC,SAAU,SAACC,GAAD,OAAML,EAAYK,EAAEC,cAAcjB,QAAQkB,OAAQ,kBAbzFV,GAAY,QACZ/C,EAAM0D,aAAaT,IAaAV,MAAOU,KACd,mBAAQU,QAAS,kBAAI3D,EAAM0D,aAAaT,IAAxC,gCCfPW,EAAc,SAAC5D,GAC3B,SAA0B6C,EAAAA,EAAAA,WAAS,GAAnC,GAAOgB,EAAP,KAAcC,EAAd,KACA,KAA0BjB,EAAAA,EAAAA,UAAsB,MAAhD,GAAOkB,EAAP,KAAcC,EAAd,KAcA,OAAIhE,EAAMiE,mBAER,iBAAK9D,UAAWD,EAAAA,mBAAhB,WACC,gBAAKC,UAAWD,EAAAA,kBAAhB,UACC,gBACCgE,IAAK,oBACLC,IAAK,uFAEP,iBAAKhE,UAAWD,EAAAA,YAAhB,WACC,iBAAKC,UAAWD,EAAAA,YAAhB,WACC,gBAAKC,UAAWD,EAAAA,cAAhB,UACC,gBAAKgE,IAAK,SACPC,IAAKC,OAGT,gBAAKjE,UAAWD,EAAAA,kBAGjB,gBAAKC,UAAWD,EAAAA,WAEhB,gBAAKC,UAAWD,EAAAA,cAAhB,UACC,gBAAKC,UAAWD,EAAAA,sBAQpB,iBAAKC,UAAWD,EAAAA,mBAAhB,WACC,gBAAKC,UAAWD,EAAAA,kBAAhB,UACC,gBACCgE,IAAK,oBACLC,IAAK,wHAEP,iBAAKhE,UAAWD,EAAAA,YAAhB,WACC,iBAAKC,UAAWD,EAAAA,YAAhB,WACC,iBAAKC,UAAWD,EAAAA,cAAhB,WACC,gBAAKgE,IAAK,SACPC,IAAKnE,EAAMqE,QAAQC,OAAOC,OAASH,IAErCpE,EAAMwE,cAAe,gBAAKrE,UAAWD,EAAAA,kBAAhB,UACrB,mBAAQyD,QAAS,kBAAMG,GAAS,IAAhC,gCAGF,gBAAK3D,UAAWD,EAAAA,YAAhB,SACEF,EAAMqE,QAAQI,cAGhBZ,IAAS,iBAAK1D,UAAWD,EAAAA,iBAAhB,WACF,mBAAQyD,QAAS,kBAAMG,GAAS,IAAhC,oBACA,iBAAK3D,UAAWD,EAAAA,UAAhB,WACI,kBAAOE,KAAK,OAAOkD,SAAU,SAACC,GAAD,OAjEjB,SAACA,GACtBA,EAAEmB,OAAOC,OAGVpB,EAAEmB,OAAOC,MAAMnC,OAAS,GAC3BwB,EAAST,EAAEmB,OAAOC,MAAM,IA4DyBC,CAAmBrB,OACvD,mBAAQI,QA1DI,WACtBI,GACH/D,EAAM6E,YAAYd,IAwDL,iCAGZ,iBAAK5D,UAAWD,EAAAA,QAAhB,WACC,SAAC0C,EAAD,CAAQI,OAAQhD,EAAMqE,QAAQrB,OAAQU,aAAc1D,EAAM0D,gBAC1D,oCAFD,IAEkB1D,EAAMqE,QAAQS,QAFhC,KAEyC,kBACvC9E,EAAMqE,QAAQU,iBAAkB,0CACjC,uBAAI/E,EAAMqE,QAAQW,gCAEnB,iBAAK7E,UAAWD,EAAAA,cAAhB,UAEEF,EAAMwE,YAAc,uBAAyB,GAC7CxE,EAAMwE,YAAc,IAClB,gBAAKrE,UAAWD,EAAAA,WAAhB,SACAF,EAAMiF,YACN,SAACpF,EAAA,EAAD,CAAQC,KAAM,WACV6D,QAAS,kBAAM3D,EAAMkF,SAASlF,EAAMqE,QAAQc,YAE9C,SAACtF,EAAA,EAAD,CAAQC,KAAM,SACX6D,QAAS,kBAAM3D,EAAMoF,OAAOpF,EAAMqE,QAAQc,uB,QCzGvD,EAAiC,8BAAjC,EAA0E,wBAA1E,EAAkH,6BCAlH,EAAgC,4BAAhC,EAA0E,0BAA1E,EAAoH,4BAApH,EAAuJ,mBAAvJ,EAAiL,mBAAjL,EAA2M,mBAA3M,EAAiP,+BAAjP,EAAwR,oBAAxR,EAA+T,+BAA/T,EAAuW,qBCS1VE,EAAO,SAAC,GAA6C,IAA5CrF,EAA2C,EAA3CA,MAAOsF,EAAoC,EAApCA,eAGnBC,EAAYvF,EAAMwF,OAAN,UAAkBtF,EAAlB,YAA6BA,GAAaA,EACtDuF,EAAYzF,EAAMwF,OAASxF,EAAM0F,MAAQ,EAAI1F,EAAM0F,MACzD,OACI,iBAAKvF,UAAWD,EAAhB,WACI,iBAAKC,UAAWD,EAAhB,WACI,gBAAKC,UAAWD,EAAhB,UACI,gBAAKgE,IAAK,SAAUC,IAAKnE,EAAM2F,OAAS3F,EAAM2F,OAASvB,OAE3D,gBAAKjE,UAAWD,EAAhB,SAAyBF,EAAMF,QAC/B,gBAAKK,UAAWD,EAAhB,SAAyBF,EAAM4F,WAEnC,gBAAKzF,UAAWD,EAAhB,SACKF,EAAM6F,WAEX,gBAAK1F,UAAWD,EAAhB,UACI,iBAAKyD,QAjBQ,kBAAM2B,EAAetF,EAAMY,KAiBRT,UAAWoF,EAA3C,WACI,gBAAKpF,UAAWD,EAAhB,UACI,gBAAK4F,QAAQ,eAAb,UACI,iBACIC,EAAE,sPACFC,UAAU,4BAGtB,gBAAK7F,UAAWD,EAAhB,SAA0BuF,a,UCoB9C,MAlDA,SAAezF,GAEX,SAAgC6C,EAAAA,EAAAA,UAAS,IAAzC,GAAOoD,EAAP,KAAiBC,EAAjB,KAEMC,EAAYnG,EAAMoG,MAAMC,KAAI,SAACC,EAAMC,GACrC,OAAO,SAAClB,EAAD,CACMrF,MAAOsG,EACPhB,eAAgBtF,EAAMwG,SAFjBD,MAMhBE,EAAmB,SAACC,GACjBA,EAAKnG,YAAYoG,QAElB3G,EAAM4G,QAAQF,EAAKnG,aACnB2F,EAAY,KAHcA,EAAY,wBAO9C,OAAIlG,EAAMiE,mBAEF,gBAAK9D,UAAWD,EAAhB,UACI,iBAAKC,UAAWD,EAAhB,WACI,gBAAKC,UAAWD,EAAhB,UACI,SAAC,IAAD,CACIO,SAAUgG,OAGlB,yBAAMR,UAOlB,iBAAK9F,UAAWD,EAAhB,WACI,iBAAKC,UAAWD,EAAhB,WACI,gBAAKC,UAAWD,EAAhB,UACI,SAAC,IAAD,CACIW,YAAa,kBACbJ,SAAUgG,OAGlB,yBAAMR,OAETE,M,SClBPU,EAA6C,CAC3CL,QAAAA,EAAAA,GACAI,QAAAA,EAAAA,GACAE,iBAAAA,EAAAA,IAGKC,GAAiB5F,EAAAA,EAAAA,KAdN,SAAC6F,GACrB,MAAO,CACHZ,MAAOY,EAAMC,eAAeb,MAC5B/B,QAAS2C,EAAMC,eAAe5C,QAC9B6C,UAAWF,EAAMC,eAAeC,UAChCjD,kBAAmB+C,EAAMC,eAAehD,qBASO4C,EAAzB1F,CAA6CgG,GCtC3E,EAAwF,gCCgB3EC,EAAU,SAACpH,GACvB,OACC,iBAAKG,UAAWD,EAAhB,WACC,SAAC0D,GAAD,UACK5D,KAEL,SAAC+G,EAAD,Q,wCCPGM,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WA+CJ,OA/CIA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,MACL,WACC,iBAA6DC,KAAKtH,OAA3DuH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAOzG,EAApB,EAAoBA,OAAQ0G,EAA5B,EAA4BA,eAAgBC,EAA5C,EAA4CA,UACxCvC,EAASqC,EAAMG,OAAOxC,QAAUqC,EAAMG,OAAOxC,OAASoC,EAAK3G,IAC3D4G,EAAMG,OAAOxC,QAAUpE,KAC1B0G,EAAetC,GACfuC,EAAUvC,MAEX,gCAED,SAAmByC,EAAuCC,EAAuCC,GAChG,iBAAmDR,KAAKtH,OAAjDwH,EAAP,EAAOA,MAAOnD,EAAd,EAAcA,QAASkD,EAAvB,EAAuBA,KAAME,EAA7B,EAA6BA,eAExBH,KAAKtH,MAAMiE,mBACVuD,EAAMG,OAAOxC,QAAUd,EAAQc,SAAWoC,EAAK3G,KACnD6G,EAAeF,EAAK3G,KACpB8G,EAAAA,EAAAA,IAAUH,EAAK3G,OAIjB,oBAED,WAEC,iBASQ0G,KAAKtH,OARZuH,EADD,EACCA,KACAlD,EAFD,EAECA,QACAY,EAHD,EAGCA,WACAhB,EAJD,EAICA,kBACAmB,EALD,EAKCA,OACAF,EAND,EAMCA,SACAxB,EAPD,EAOCA,aACAmB,EARD,EAQCA,YAGD,OACC,SAACuC,EAAD,CACCnC,WAAYA,EACZT,YAAa+C,EAAK3G,KAAOyD,EAAQc,OACjCd,QAASA,EACTJ,kBAAmBA,EACnBmB,OAAQA,EACRF,SAAUA,EACVxB,aAAcA,EACdmB,YAAaA,QAGf,EA/CIwC,CAA8BU,EAAAA,WAmF9BlB,EAA6C,CAClDmB,eAAAA,EAAAA,GACAC,qBAAAA,EAAAA,GACAR,eAAAA,EAAAA,GACArC,OAAAA,EAAAA,GACAF,SAAAA,EAAAA,GACAxB,aAAAA,EAAAA,GACAgE,UAAAA,EAAAA,GACA7C,YAAAA,EAAAA,IAGD,GAAeqD,EAAAA,EAAAA,IACdjH,EAAAA,EACAkH,EAAAA,IACAhH,EAAAA,EAAAA,KA5BuB,SAAC,GAAsF,IAArF8F,EAAoF,EAApFA,eAAgBjG,EAAoE,EAApEA,YAAaoH,EAAuD,EAAvDA,aACtD,MAAO,CACNnD,WAAYgC,EAAehC,WAC3BZ,QAAS4C,EAAe5C,QACxB+B,MAAOa,EAAeb,MACtBmB,KAAMvG,EAAYuG,KAClBxG,OAAQC,EAAYD,OACpBsH,MAAOD,EAAaC,MACpBC,iBAAkBF,EAAaE,iBAC/BrE,kBAAmBgD,EAAehD,kBAClCiD,UAAWD,EAAeC,aAkBFL,GAH1B,CAIEQ,I,2JCjHa,SAASkB,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKlH,EADLkD,GAAS,OAA6B8D,EAAQC,GAGlD,GAAIE,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBJ,GAEpD,IAAKhH,EAAI,EAAGA,EAAIqH,EAAiBrG,OAAQhB,IACvCkH,EAAMG,EAAiBrH,GACnBiH,EAASK,QAAQJ,IAAQ,GACxBC,OAAOI,UAAUC,qBAAqB7G,KAAKqG,EAAQE,KACxDhE,EAAOgE,GAAOF,EAAOE,IAIzB,OAAOhE","sources":["webpack://samurai-way/./src/components/Button/Button.module.css?ce6f","components/Button/Button.tsx","webpack://samurai-way/./src/components/MessageForm/MessageForm.module.css?2a5f","components/MessageForm/MessageForm.tsx","hook/withAuthRedirect.tsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://samurai-way/./src/features/Profile/ProfileInfo/ProfileInfo.module.css?0c17","webpack://samurai-way/./src/features/Profile/ProfileInfo/Status/Status.module.css?df61","features/Profile/ProfileInfo/Status/Status.tsx","features/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/features/Profile/MyPosts/Posts.module.css?bfa7","webpack://samurai-way/./src/features/Profile/MyPosts/Post/Post.module.css?82e5","features/Profile/MyPosts/Post/Post.tsx","features/Profile/MyPosts/Posts.tsx","features/Profile/MyPosts/PostsContainer.tsx","webpack://samurai-way/./src/pages/profile/Profile.module.css?c752","pages/profile/Profile.tsx","pages/profile/ProfileContainer.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__tIsf1\",\"primary\":\"Button_primary__lXhXN\"};","import React from \"react\";\r\nimport s from \"./Button.module.css\"\r\n\r\nexport type buttonPropsType = {\r\n    name: string\r\n    onClick?: () => void\r\n    primary?: boolean\r\n    disabled?: boolean\r\n}\r\n\r\nexport const Button = ({\r\n                           name,\r\n                           primary = false,\r\n                           ...props\r\n                       }: buttonPropsType) => {\r\n\r\n    const finalClassName = `${s.btn}\r\n    ${primary? s.primary : ''}`\r\n    return <button className={finalClassName}\r\n                   type=\"button\"\r\n                   {...props}>{name}\r\n    </button>\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MessageForm_form__UoSo9\"};","import {Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport s from \"./MessageForm.module.css\"\r\n\r\nexport interface FormDataType {\r\n    messageText: string\r\n}\r\n\r\ninterface SendMessageFormInterface {\r\n    initialValue?: string\r\n    placeholder?: string\r\n    onSubmit: (data: FormDataType) => void\r\n}\r\n\r\nexport const SendMessageForm = (props: SendMessageFormInterface) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                messageText: props.initialValue || ''\r\n            }}\r\n            onSubmit={( values: FormDataType, {resetForm} ) => {\r\n                props.onSubmit(values)\r\n                resetForm()\r\n            }}\r\n        >\r\n            <Form className={s.form}>\r\n                <textarea id=\"messageText\" name=\"messageText\" placeholder={props.placeholder} />\r\n                <button type=\"submit\">Send</button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}","import React, {ComponentType} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {ReduxStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ninterface WithAuthProps { isAuth: boolean }\r\n\r\nconst mapStateToPropsAuth = ({authReducer}: ReduxStateType): WithAuthProps => {\r\n    return { isAuth: authReducer.isAuth }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    function RedirectComponent(props: WithAuthProps) {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to=\"/login\"/>\r\n        return <Component {...restProps as T} />\r\n    }\r\n\r\n    return connect(mapStateToPropsAuth)(RedirectComponent)\r\n}\r\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nexport default {\"contentImgWrapper\":\"ProfileInfo_contentImgWrapper__lBdx5\",\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__iko4L\",\"profileInfo\":\"ProfileInfo_profileInfo__hBymI\",\"avatarBlock\":\"ProfileInfo_avatarBlock__qwMkc\",\"avatarWrapper\":\"ProfileInfo_avatarWrapper__gnYTn\",\"nameWrapper\":\"ProfileInfo_nameWrapper__plsYW\",\"aboutMe\":\"ProfileInfo_aboutMe__tURE8\",\"profileAction\":\"ProfileInfo_profileAction__8Tuvd\",\"avatarMenuOnHover\":\"ProfileInfo_avatarMenuOnHover__yxvlX\",\"changePhotoModal\":\"ProfileInfo_changePhotoModal__4WNp8\",\"fileInput\":\"ProfileInfo_fileInput__89Vab\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Status_container__RSZtm\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './Status.module.css'\r\n\r\ninterface StatusProps {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const Status = (props: StatusProps) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [input, updateInput] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        updateInput(props.status)\r\n    }, [props.status])\r\n\r\n    const onBlurHandler = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(input)\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            {!editMode &&\r\n                <div onDoubleClick={()=>setEditMode(true)}>\r\n                    <span>{props.status || \"Double click to edit status..\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus onChange={(e)=> updateInput(e.currentTarget.value)} onBlur={()=>onBlurHandler()}\r\n                           value={input}/>\r\n                    <button onClick={()=>props.updateStatus(input)}>save status</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n","import React, {useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport {ProfileType} from \"../../../redux/profile-reducer\";\r\nimport logo from \"../../../assets/img/defaultUser.png\"\r\nimport {Button} from \"../../../components/Button/Button\";\r\nimport {Status} from \"./Status/Status\";\r\n\r\ntype ProfileInfoPropsType = {\r\n\tisFollowed: boolean\r\n\tisMyProfile: boolean\r\n\tprofile: ProfileType\r\n\tfollow: (userID: number) => void\r\n\tunfollow: (userID: number) => void\r\n\tisFetchingProfile: boolean\r\n\tupdateStatus: (status: string) => void\r\n\tupdatePhoto: (photoFile: File) => void\r\n}\r\n\r\nexport const ProfileInfo = (props: ProfileInfoPropsType) => {\r\n\tconst [modal, setModal] = useState(false)\r\n\tconst [photo, setPhoto] = useState<File | null>(null)\r\n\tconst inputChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (!e.target.files) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (e.target.files.length > 0) {\r\n\t\t\tsetPhoto(e.target.files[0])\r\n\t\t}\r\n\t}\r\n\tconst updatePhotoHandler = () => {\r\n\t\tif (photo) {\r\n\t\t\tprops.updatePhoto(photo)\r\n\t\t}\r\n\t}\r\n\tif (props.isFetchingProfile) {\r\n\t\treturn (\r\n\t\t\t<div className={s.profileInfoWrapper}>\r\n\t\t\t\t<div className={s.contentImgWrapper}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\talt={\"profile-wallpaper\"}\r\n\t\t\t\t\t\tsrc={'https://upload.wikimedia.org/wikipedia/commons/f/f6/Swiss_National_Park_131.JPG'}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.profileInfo}>\r\n\t\t\t\t\t<div className={s.avatarBlock}>\r\n\t\t\t\t\t\t<div className={s.avatarWrapper}>\r\n\t\t\t\t\t\t\t<img alt={\"avatar\"}\r\n\t\t\t\t\t\t\t\t\t src={logo}>\r\n\t\t\t\t\t\t\t</img>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={s.nameWrapper}>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={s.aboutMe}>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={s.profileAction}>\r\n\t\t\t\t\t\t<div className={s.btnWrapper}>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<div className={s.profileInfoWrapper}>\r\n\t\t\t<div className={s.contentImgWrapper}>\r\n\t\t\t\t<img\r\n\t\t\t\t\talt={\"profile-wallpaper\"}\r\n\t\t\t\t\tsrc={'https://asset.berita24.id/wallpaper/20220115/3200x1080-macos-extended-wallpaper-for-ultrawide-monitors-thumb.jpg'}/>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.profileInfo}>\r\n\t\t\t\t<div className={s.avatarBlock}>\r\n\t\t\t\t\t<div className={s.avatarWrapper}>\r\n\t\t\t\t\t\t<img alt={\"avatar\"}\r\n\t\t\t\t\t\t\t\t src={props.profile.photos.large || logo}>\r\n\t\t\t\t\t\t</img>\r\n\t\t\t\t\t\t{props.isMyProfile && <div className={s.avatarMenuOnHover}>\r\n\t\t\t\t\t\t\t<button onClick={() => setModal(true)}>Change photo</button>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={s.nameWrapper}>\r\n\t\t\t\t\t\t{props.profile.fullName}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{modal && <div className={s.changePhotoModal}>\r\n            <button onClick={() => setModal(false)}>close</button>\r\n            <div className={s.fileInput}>\r\n                <input type=\"file\" onChange={(e) => inputChangeHandler(e)}/>\r\n                <button onClick={updatePhotoHandler}>Update Photo</button>\r\n            </div>\r\n        </div>}\r\n\t\t\t\t<div className={s.aboutMe}>\r\n\t\t\t\t\t<Status status={props.profile.status} updateStatus={props.updateStatus}/>\r\n\t\t\t\t\t<b>About me</b> {props.profile.aboutMe} <br/>\r\n\t\t\t\t\t{props.profile.lookingForAJob && <b>Open to work </b>}\r\n\t\t\t\t\t<p>{props.profile.lookingForAJobDescription}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.profileAction}>\r\n\r\n\t\t\t\t\t{props.isMyProfile ? 'Current user account' : ''}\r\n\t\t\t\t\t{props.isMyProfile ? ''\r\n\t\t\t\t\t\t: <div className={s.btnWrapper}>\r\n\t\t\t\t\t\t\t{props.isFollowed ?\r\n\t\t\t\t\t\t\t\t<Button name={\"Unfollow\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => props.unfollow(props.profile.userId)}\r\n\t\t\t\t\t\t\t\t></Button>\r\n\t\t\t\t\t\t\t\t: <Button name={\"Follow\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => props.follow(props.profile.userId)}\r\n\t\t\t\t\t\t\t\t></Button>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"myPostsWrapper\":\"Posts_myPostsWrapper__FJGPA\",\"post_new\":\"Posts_post_new__OkyKs\",\"postNewCanvas\":\"Posts_postNewCanvas__ep2Lj\"};","// extracted by mini-css-extract-plugin\nexport default {\"authorWrapper\":\"Post_authorWrapper__zi4vh\",\"bodyWrapper\":\"Post_bodyWrapper__dHzR8\",\"avatarWrapper\":\"Post_avatarWrapper__O9vCQ\",\"name\":\"Post_name__Z4fST\",\"date\":\"Post_date__SS-en\",\"post\":\"Post_post__SeQlh\",\"postInteractions\":\"Post_postInteractions__FLLGA\",\"likes\":\"Post_likes__PBYOl\",\"likeSvgContainer\":\"Post_likeSvgContainer__OutT9\",\"active\":\"Post_active__usxEs\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nimport {PostType} from \"../../../../redux/profile-reducer\";\r\nimport logo from \"../../../../assets/img/defaultUser.png\";\r\n\r\ntype PostPropsType = {\r\n    props: PostType\r\n    addLikeHandler: (postId: number) => void\r\n}\r\n\r\nexport const Post = ({props, addLikeHandler}: PostPropsType ) => {\r\n    const likeClickHandler = () => addLikeHandler(props.id)\r\n\r\n    const likeClass = props.myLike ? `${s.likes} ${s.active}` : s.likes\r\n    const likeCount = props.myLike ? props.likes + 1 : props.likes\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.authorWrapper}>\r\n                <div className={s.avatarWrapper}>\r\n                    <img alt={\"avatar\"} src={props.avatar ? props.avatar : logo}/>\r\n                </div>\r\n                <div className={s.name}>{props.name}</div>\r\n                <div className={s.date}>{props.date}</div>\r\n            </div>\r\n            <div className={s.bodyWrapper}>\r\n                {props.message}\r\n            </div>\r\n            <div className={s.postInteractions}>\r\n                <div onClick={likeClickHandler} className={likeClass}>\r\n                    <div className={s.likeSvgContainer}>\r\n                        <svg viewBox=\"0 0 52 48.35\">\r\n                            <path\r\n                                d=\"M51.91,16.24C51.15,7.89,45.24,1.83,37.84,1.83a14,14,0,0,0-12,6.9,13.47,13.47,0,0,0-11.69-6.9C6.76,1.83.85,7.89.09,16.24a14.8,14.8,0,0,0,.44,5.48,23.5,23.5,0,0,0,7.2,12L25.84,50.17,44.27,33.73a23.5,23.5,0,0,0,7.2-12A14.8,14.8,0,0,0,51.91,16.24Z\"\r\n                                transform=\"translate(0 -1.83)\"/>\r\n                        </svg>\r\n                    </div>\r\n                    <div className={s.likes}>{likeCount}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport s from \"./Posts.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\nimport {MyPostsPropsType} from \"./PostsContainer\";\r\nimport {FormDataType, SendMessageForm} from \"../../../components/MessageForm/MessageForm\";\r\n\r\nfunction Posts(props: MyPostsPropsType) {\r\n\r\n    const [errorMsg, setErrorMsg] = useState(\"\")\r\n\r\n    const postsList = props.posts.map((post, index) => {\r\n        return <Post key={index}\r\n                     props={post}\r\n                     addLikeHandler={props.addLike}\r\n        />\r\n    })\r\n\r\n    const onSubmitPostForm = (form: FormDataType) => {\r\n        if (!form.messageText.trim()) setErrorMsg(\"Your post is empty!\")\r\n        else {\r\n            props.addPost(form.messageText)\r\n            setErrorMsg(\"\")\r\n        }\r\n    }\r\n\r\n    if (props.isFetchingProfile) {\r\n        return (\r\n            <div className={s.myPostsWrapper}>\r\n                <div className={s.post_new}>\r\n                    <div className={s.postNewCanvas}>\r\n                        <SendMessageForm\r\n                            onSubmit={onSubmitPostForm}\r\n                        />\r\n                    </div>\r\n                    <div>{errorMsg}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPostsWrapper}>\r\n            <div className={s.post_new}>\r\n                <div className={s.postNewCanvas}>\r\n                    <SendMessageForm\r\n                        placeholder={'Write a post...'}\r\n                        onSubmit={onSubmitPostForm}\r\n                    />\r\n                </div>\r\n                <div>{errorMsg}</div>\r\n            </div>\r\n            {postsList}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;","import React from \"react\";\r\nimport {ReduxStateType} from \"../../../redux/redux-store\";\r\nimport {\r\n    addLike,\r\n    addPost,\r\n    postInputHandler,\r\n    PostType,\r\n    ProfileType\r\n} from \"../../../redux/profile-reducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    posts: PostType[]\r\n    profile: ProfileType\r\n    postInput: string\r\n    isFetchingProfile: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    addLike: (postId: number) => void\r\n    addPost: (postMessage: string) => void\r\n    postInputHandler: (input: string) => void\r\n}\r\nexport type MyPostsPropsType = MapDispatchToPropsType & MapStateToPropsType\r\n\r\nconst mapStateToProps = (state: ReduxStateType): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profileReducer.posts,\r\n        profile: state.profileReducer.profile,\r\n        postInput: state.profileReducer.postInput,\r\n        isFetchingProfile: state.profileReducer.isFetchingProfile\r\n    }\r\n}\r\nconst mapDispatchToProps: MapDispatchToPropsType = {\r\n        addLike,\r\n        addPost,\r\n        postInputHandler\r\n}\r\n\r\nexport const PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)","// extracted by mini-css-extract-plugin\nexport default {\"contentImgWrapper\":\"Profile_contentImgWrapper__GrVY6\",\"profileWrapper\":\"Profile_profileWrapper__we6fu\"};","import {ProfileInfo} from \"../../features/Profile/ProfileInfo/ProfileInfo\";\r\nimport {PostsContainer} from \"../../features/Profile/MyPosts/PostsContainer\";\r\nimport s from \"./Profile.module.css\"\r\nimport {ProfileType} from \"../../redux/profile-reducer\";\r\nimport React from \"react\";\r\n\r\ntype ProfileComponentPropsType = {\r\n\tisFollowed: boolean\r\n\tisMyProfile: boolean\r\n\tprofile: ProfileType\r\n\tfollow: (userID: number) => void\r\n\tunfollow: (userID: number) => void\r\n\tisFetchingProfile: boolean\r\n\tupdateStatus: (status: string) => void\r\n\tupdatePhoto: (photoFile: File) => void\r\n}\r\n\r\nexport const Profile = (props: ProfileComponentPropsType) => {\r\n\treturn (\r\n\t\t<div className={s.profileWrapper}>\r\n\t\t\t<ProfileInfo\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t\t<PostsContainer/>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\nimport {Profile} from \"./Profile\";\r\nimport {\r\n\tProfileStateType,\r\n\tProfileType,\r\n\tsetUserProfile, setFetchingProfileAC, getProfileInfo, getStatus, updateStatus, updatePhoto\r\n} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {AuthStateType} from \"../../redux/auth-reducer\";\r\nimport {UsersStateType, follow, unfollow} from \"../../redux/user-reducer\";\r\nimport {withAuthRedirect} from \"../../hook/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileClassComponent extends React.Component<ProfilePropsType, ProfileStateType> {\r\n\tcomponentDidMount() {\r\n\t\tconst {data, match, isAuth, getProfileInfo, getStatus} = {...this.props}\r\n\t\tlet userId = match.params.userId ? +match.params.userId : data.id\r\n\t\tif (match.params.userId || isAuth) {\r\n\t\t\tgetProfileInfo(userId)\r\n\t\t\tgetStatus(userId)\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Readonly<ProfilePropsType>, prevState: Readonly<ProfileStateType>, snapshot?: any) {\r\n\t\tconst {match, profile, data, getProfileInfo} = {...this.props}\r\n\t\t/* load profileinfo of user unless otherwise specified in the URL */\r\n\t\tif (!this.props.isFetchingProfile) {\r\n\t\t\tif (!match.params.userId && profile.userId !== data.id) {\r\n\t\t\t\tgetProfileInfo(data.id)\r\n\t\t\t\tgetStatus(data.id)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst {\r\n\t\t\tdata,\r\n\t\t\tprofile,\r\n\t\t\tisFollowed,\r\n\t\t\tisFetchingProfile,\r\n\t\t\tfollow,\r\n\t\t\tunfollow,\r\n\t\t\tupdateStatus,\r\n\t\t\tupdatePhoto\r\n\t\t} = {...this.props}\r\n\r\n\t\treturn (\r\n\t\t\t<Profile\r\n\t\t\t\tisFollowed={isFollowed}\r\n\t\t\t\tisMyProfile={data.id === profile.userId}\r\n\t\t\t\tprofile={profile}\r\n\t\t\t\tisFetchingProfile={isFetchingProfile}\r\n\t\t\t\tfollow={follow}\r\n\t\t\t\tunfollow={unfollow}\r\n\t\t\t\tupdateStatus={updateStatus}\r\n\t\t\t\tupdatePhoto={updatePhoto}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport type MapDispatchToPropsType = {\r\n\tsetUserProfile: (profile: ProfileType) => void\r\n\tsetFetchingProfileAC: (isFetchingProfile: boolean) => void\r\n\tfollow: (userID: number) => void\r\n\tunfollow: (userID: number) => void\r\n\tgetProfileInfo: (userId: number) => void\r\n\tgetStatus: (userId: number) => void\r\n\tupdateStatus: (status: string) => void\r\n\tupdatePhoto: (photoFile: File) => void\r\n}\r\nexport type MapStateToPropsType =\r\n\tProfileStateType\r\n\t& Pick<AuthStateType, 'data' | 'isAuth'>\r\n\t& Pick<UsersStateType, 'users' | 'isFetchingFollow'>\r\n\r\ntype PathParamsType = { userId: string | undefined } //path for route\r\nexport type ProfileOwnPropsType = MapStateToPropsType & MapDispatchToPropsType //state & dispatch\r\ntype ProfilePropsType = RouteComponentProps<PathParamsType> & ProfileOwnPropsType //route & state & dispatch\r\n\r\nconst mapStateToProps = ({profileReducer, authReducer, usersReducer}: ReduxStateType): MapStateToPropsType => {\r\n\treturn {\r\n\t\tisFollowed: profileReducer.isFollowed,\r\n\t\tprofile: profileReducer.profile,\r\n\t\tposts: profileReducer.posts,\r\n\t\tdata: authReducer.data,\r\n\t\tisAuth: authReducer.isAuth,\r\n\t\tusers: usersReducer.users,\r\n\t\tisFetchingFollow: usersReducer.isFetchingFollow,\r\n\t\tisFetchingProfile: profileReducer.isFetchingProfile,\r\n\t\tpostInput: profileReducer.postInput\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps: MapDispatchToPropsType = {\r\n\tsetUserProfile,\r\n\tsetFetchingProfileAC,\r\n\tgetProfileInfo,\r\n\tfollow,\r\n\tunfollow,\r\n\tupdateStatus,\r\n\tgetStatus,\r\n\tupdatePhoto\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n\twithAuthRedirect,\r\n\twithRouter,\r\n\tconnect(mapStateToProps, mapDispatchToProps)\r\n)(ProfileClassComponent)\r\n\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["Button","name","primary","props","finalClassName","s","className","type","SendMessageForm","initialValues","messageText","initialValue","onSubmit","values","resetForm","id","placeholder","mapStateToPropsAuth","isAuth","authReducer","withAuthRedirect","Component","connect","restProps","to","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Status","useState","editMode","setEditMode","status","input","updateInput","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","onClick","ProfileInfo","modal","setModal","photo","setPhoto","isFetchingProfile","alt","src","logo","profile","photos","large","isMyProfile","fullName","target","files","inputChangeHandler","updatePhoto","aboutMe","lookingForAJob","lookingForAJobDescription","isFollowed","unfollow","userId","follow","Post","addLikeHandler","likeClass","myLike","likeCount","likes","avatar","date","message","viewBox","d","transform","errorMsg","setErrorMsg","postsList","posts","map","post","index","addLike","onSubmitPostForm","form","trim","addPost","mapDispatchToProps","postInputHandler","PostsContainer","state","profileReducer","postInput","Posts","Profile","ProfileClassComponent","this","data","match","getProfileInfo","getStatus","params","prevProps","prevState","snapshot","React","setUserProfile","setFetchingProfileAC","compose","withRouter","usersReducer","users","isFetchingFollow","_objectWithoutProperties","source","excluded","key","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable"],"sourceRoot":""}